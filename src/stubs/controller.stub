<?php

namespace App\Http\Controllers\{model};

use App\Http\Controllers\ApiController;
use App\Services\{model}\{model}Service;
use App\Http\Requests\{model}\Create{model}Request;
use App\Http\Requests\{model}\Update{model}Request;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class {model}Controller extends ApiController
{
    protected {model}Service $service;

    /**
     * @param {model}Service $service
     * @param Request $request
     */
    public function __construct({model}Service $service, Request $request)
    {
        $this->service = $service;
        parent::__construct($request);
    }

    /**
     * Redirect to view pages of the resource.
     *
     */
    public function index()
    {
        // return view();
    }

    /**
     * Display a listing of the resource.
     *
     * @return JsonResponse
     */
    public function datatable()
    {
        return $this->service->dataTable();
    }

    /**
     * Redirect to create page.
     *
     * @return ViewResponse
     */
    public function create()
    {
        // return view();
    }

    /**
     * Redirect to edit page.
     *
     * @return ViewResponse
     */
    public function edit(string $id)
    {
        $data = $this->service->getById($id);
        // return view();
    }

    /**
     * Redirect to view page.
     *
     * @return ViewResponse
     */
    public function view(string $id)
    {
        $data = $this->service->getById($id);
        // return view();
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param Request $request
     * @return JsonResponse
     */
    public function store(Create{model}Request $request)
    {
        $data = $this->service->create($request);
        return $this->sendSuccess($data, null, 201);
    }

    /**
     * Display the specified resource.
     *
     * @param String $id
     * @return JsonResponse
     */
    public function show(string $id)
    {
        $data = $this->service->getById($id);
        return $this->sendSuccess($data, null, 200);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param Request $request
     * @param String $id
     * @return JsonResponse
     */
    public function update(Update{model}Request $request, string $id)
    {
        $data = $this->service->update($id, $request);
        return $this->sendSuccess($data, null, 200);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param String $id
     * @return JsonResponse
     */
    public function destroy(string $id)
    {
        $data = $this->service->delete($id);
        return $this->sendSuccess($data, null, 200);
    }
}
