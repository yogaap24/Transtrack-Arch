<?php

namespace App\Services\{model};

use App\Models\Table\{model}Table;
use App\Services\AppService;
use App\Services\AppServiceInterface;
use Yajra\DataTables\Facades\DataTables;
use Illuminate\Support\Facades\DB;

class {model}Service extends AppService implements AppServiceInterface
{

    public function __construct({model}Table $model)
    {
        parent::__construct($model);
    }

    public function dataTable()
    {
        $model  =  $this->model->query();
        return DataTables::eloquent($model)->toJson();
    }

    public function getById($id)
    {
        return $this->model->newQuery()->findOrFail($id);
    }

    public function create($data)
    {
        DB::beginTransaction();

        try {
            $row = $this->model->newQuery()->create([
                'name'     => $data['name'],
            ]);

            DB::commit();
            return $row;
        } catch (\Exception $exception) {
            DB::rollBack();
            return $this->sendError(null, $this->debug ? $exception->getMessage() : null);
        }
    }

    public function update($id, $data)
    {
        DB::beginTransaction();
        $row = $this->model->newQuery()->findOrFail($id);

        try {
            $row->update([
                'name'     => $data['name'],
            ]);

            DB::commit();
            return $row;
        } catch (\Exception $exception) {
            DB::rollBack();
            return $this->sendError(null, $this->debug ? $exception->getMessage() : null);
        }
    }

    public function delete($id)
    {
        DB::beginTransaction();
        $row = $this->model->newQuery()->findOrFail($id);

        try {
            $row->delete();

            DB::commit();
            return $row;
        } catch (\Exception $exception) {
            DB::rollBack();
            return $this->sendError(null, $this->debug ? $exception->getMessage() : null);
        }
    }
}
